AWSTemplateFormatVersion: 2010-09-09

Description: EC2 instance and security group for the Valohai Worker Queue that handles job queue, states, and short-term logs

Parameters:
  ImageId:
    Type: AWS::EC2::Image::Id

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName

  Subnet:
    Type: AWS::EC2::Subnet::Id

  VPC:
    Type: AWS::EC2::VPC::Id

  WorkersSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  QueueAddress:
    Type: String

Resources:
  ValohaiRedisSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: A password for the redis store running on the Valohai queue
      GenerateSecretString:
        PasswordLength: 32
        ExcludePunctuation: True
      Name: ValohaiRedisSecret
      Tags:
        - Key: valohai
          Value: 1

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: valohai-sg-queue
      GroupDescription: Security group for the Valohai Worker Queue
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: for acme tooling (certificate for machine)
        - IpProtocol: tcp
          FromPort: 63790
          ToPort: 63790
          CidrIp: 34.248.245.191/32
          Description: for Redis over TLS from app.valohai.com
        - IpProtocol: tcp
          FromPort: 63790
          ToPort: 63790
          SourceSecurityGroupId: !Ref WorkersSecurityGroup
          Description: for Redis over TLS from workers
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CirdIp: 3.251.38.215/32
          Description: SSH connection for Valohai maintenance
      Tags:
        - Key: Name
          Value: valohai-sg-queue
  QueueRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ValohaiQueueRole
      AssumeRolePolicyDocument: {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":["ec2.amazonaws.com"]},"Action":["sts:AssumeRole"]}]}

  QueuePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ValohaiQueuePolicy
      Roles:
        - !Ref QueueRole
      PolicyDocument: {"Version":"2012-10-17","Statement":[{"Sid":"0","Effect":"Allow","Action":["secretsmanager:GetResourcePolicy","secretsmanager:GetSecretValue","secretsmanager:DescribeSecret","secretsmanager:ListSecretVersionIds"],"Resource":"*","Condition":{"StringEquals":{"secretsmanager:ResourceTag/valohai":"1"}}},{"Sid":"1","Effect":"Allow","Action":"secretsmanager:GetRandomPassword","Resource":"*"}]}

  QueueInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ValohaiQueueInstanceProfile
      Roles:
        - ValohaiQueueRole

  WorkerQueue:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyPair
      ImageId: !Ref ImageId
      InstanceType: t3.medium
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref Subnet
      IamInstanceProfile: !Ref QueueInstanceProfile
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install awscli -y
            export SECRET=`aws secretsmanager get-secret-value --secret-id ValohaiRedisSecret --query SecretString --output text --region ${AWS::Region}`
            curl https://raw.githubusercontent.com/valohai/worker-queue/main/host/setup.sh | sudo QUEUE_ADDRESS=${QueueAddress} REDIS_PASSWORD=$SECRET bash
            unset $SECRET
      Tags:
        - Key: Name
          Value: valohai-i-queue
  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref WorkerQueue

Outputs:
  PrivateIp:
    Value: !GetAtt WorkerQueue.PrivateIp

  PublicIp:
    Value: !GetAtt WorkerQueue.PublicIp
